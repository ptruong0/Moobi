[{"C:\\WebDev\\mubi\\src\\index.js":"1","C:\\WebDev\\mubi\\src\\App.js":"2","C:\\WebDev\\mubi\\src\\components\\Header.jsx":"3","C:\\WebDev\\mubi\\src\\components\\MovieBody.jsx":"4","C:\\WebDev\\mubi\\src\\components\\MovieSquare.jsx":"5","C:\\WebDev\\Mubi\\src\\index.js":"6","C:\\WebDev\\Mubi\\src\\App.js":"7","C:\\WebDev\\Mubi\\src\\screens\\Browse.jsx":"8","C:\\WebDev\\Mubi\\src\\components\\Header.jsx":"9","C:\\WebDev\\Mubi\\src\\components\\MovieBody.jsx":"10","C:\\WebDev\\Mubi\\src\\components\\MovieSquare.jsx":"11","C:\\WebDev\\Mubi\\src\\screens\\MyLibrary.jsx":"12","C:\\WebDev\\Mubi\\src\\screens\\Search.jsx":"13","C:\\WebDev\\Mubi\\src\\components\\SearchBar.jsx":"14"},{"size":178,"mtime":1611602611090,"results":"15","hashOfConfig":"16"},{"size":249,"mtime":1611609033352,"results":"17","hashOfConfig":"16"},{"size":169,"mtime":1611602867879,"results":"18","hashOfConfig":"16"},{"size":1046,"mtime":1611611178699,"results":"19","hashOfConfig":"16"},{"size":549,"mtime":1611611375044,"results":"20","hashOfConfig":"16"},{"size":181,"mtime":1611691308979,"results":"21","hashOfConfig":"22"},{"size":646,"mtime":1611694279180,"results":"23","hashOfConfig":"22"},{"size":1983,"mtime":1613091677191,"results":"24","hashOfConfig":"22"},{"size":709,"mtime":1613093694232,"results":"25","hashOfConfig":"22"},{"size":1321,"mtime":1613091445223,"results":"26","hashOfConfig":"22"},{"size":810,"mtime":1613096909729,"results":"27","hashOfConfig":"22"},{"size":135,"mtime":1611693542470,"results":"28","hashOfConfig":"22"},{"size":1810,"mtime":1613091690693,"results":"29","hashOfConfig":"22"},{"size":371,"mtime":1613091676183,"results":"30","hashOfConfig":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"18lyjrp",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1nvn8me",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\WebDev\\mubi\\src\\index.js",[],["63","64"],"C:\\WebDev\\mubi\\src\\App.js",[],"C:\\WebDev\\mubi\\src\\components\\Header.jsx",[],"C:\\WebDev\\mubi\\src\\components\\MovieBody.jsx",[],"C:\\WebDev\\mubi\\src\\components\\MovieSquare.jsx",["65"],"C:\\WebDev\\Mubi\\src\\index.js",[],["66","67"],"C:\\WebDev\\Mubi\\src\\App.js",[],"C:\\WebDev\\Mubi\\src\\screens\\Browse.jsx",["68","69","70","71"],"import React from 'react';\r\nimport env from 'react-dotenv';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport MovieSquare from '../components/MovieSquare';\r\nimport MovieBody from '../components/MovieBody.jsx';\r\nimport SearchBar from '../components/SearchBar.jsx';\r\n\r\nclass Browse extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            searchedMovies: []\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const form = document.querySelector('#search-form');\r\n        const query = form.search.value;\r\n        if (query != \"\") {\r\n            console.log(query);\r\n            fetch('https://api.themoviedb.org/3/search/movie?api_key=' + env.API_KEY + '&language=en-US&page=1&include_adult=false&query=' + query)\r\n                .then(res => res.json())\r\n                .then((res) => {\r\n                    console.log(res.results);\r\n                    this.setState({\r\n                        searchedMovies: res.results\r\n                    });\r\n                })\r\n                .catch((err) => console.log(err));\r\n        } else {\r\n            this.setState({\r\n                searchedMovies: []\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.searchedMovies.length != 0) {\r\n            var movieComponents = this.state.searchedMovies.map(\r\n                (movie) => <MovieSquare key={movie.id} movie={movie} />\r\n            );\r\n        }\r\n        else {\r\n            var movieComponents = <MovieBody />\r\n        }\r\n        return (\r\n            <div className=\"search-page\">\r\n\r\n                <SearchBar handleSubmit={this.handleSubmit} />\r\n                <div className=\"movie-grid\">\r\n                    <Grid container direction=\"\">\r\n                        {movieComponents}\r\n                    </Grid>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Browse;","C:\\WebDev\\Mubi\\src\\components\\Header.jsx",[],"C:\\WebDev\\Mubi\\src\\components\\MovieBody.jsx",[],"C:\\WebDev\\Mubi\\src\\components\\MovieSquare.jsx",[],"C:\\WebDev\\Mubi\\src\\screens\\MyLibrary.jsx",[],"C:\\WebDev\\Mubi\\src\\screens\\Search.jsx",["72","73","74"],"import { render } from '@testing-library/react';\r\nimport React from 'react';\r\nimport env from 'react-dotenv';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport MovieSquare from '../components/MovieSquare.jsx';\r\nimport SearchBar from '../components/SearchBar.jsx';\r\n\r\nclass Search extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            searchedMovies: []\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const form = document.querySelector('#search-form');\r\n        const query = form.search.value;\r\n        if (query != \"\") {\r\n            console.log(query);\r\n            fetch('https://api.themoviedb.org/3/search/movie?api_key=' + env.API_KEY + '&language=en-US&page=1&include_adult=false&query=' + query)\r\n                .then(res => res.json())\r\n                .then((res) => {\r\n                    console.log(res.results);\r\n                    this.setState({\r\n                        searchedMovies: res.results\r\n                    });\r\n                })\r\n                .catch((err) => console.log(err));\r\n        } \r\n    }\r\n\r\n    render() {\r\n        if (this.state.searchedMovies.length != 0) {\r\n            var movieComponents = this.state.searchedMovies.map(\r\n                (movie) => <MovieSquare key={movie.id} movie={movie} />\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"search-page\">\r\n\r\n                <SearchBar handleSubmit={this.handleSubmit} />\r\n\r\n\r\n                <div className=\"movie-grid\">\r\n                    <Grid container direction=\"\">\r\n                        {movieComponents}\r\n                    </Grid>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","C:\\WebDev\\Mubi\\src\\components\\SearchBar.jsx",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":9,"column":13,"nodeType":"81","endLine":15,"endColumn":15},{"ruleId":"75","replacedBy":"82"},{"ruleId":"77","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":7,"column":8,"nodeType":"86","messageId":"87","endLine":7,"endColumn":14},{"ruleId":"88","severity":1,"message":"89","line":22,"column":19,"nodeType":"90","messageId":"91","endLine":22,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":41,"column":46,"nodeType":"90","messageId":"91","endLine":41,"endColumn":48},{"ruleId":"92","severity":1,"message":"93","line":47,"column":17,"nodeType":"86","messageId":"94","endLine":47,"endColumn":32},{"ruleId":"84","severity":1,"message":"95","line":1,"column":10,"nodeType":"86","messageId":"87","endLine":1,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":22,"column":19,"nodeType":"90","messageId":"91","endLine":22,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":37,"column":46,"nodeType":"90","messageId":"91","endLine":37,"endColumn":48},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["96"],["97"],"no-unused-vars","'Search' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-redeclare","'movieComponents' is already defined.","redeclared","'render' is defined but never used.","no-global-assign","no-unsafe-negation"]